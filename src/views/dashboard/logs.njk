{% extends "../layout.njk" %}

{% block content %}
<div class="space-y-6 fade-in">
    <!-- Header with Modern Styling -->
    <div class="flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4">
        <div class="flex items-center gap-3">
            <div class="w-10 h-10 bg-gradient-to-r from-primary to-secondary rounded-lg flex items-center justify-center text-white">
                <i class="fas fa-list-alt text-lg"></i>
            </div>
            <div>
                <h1 class="text-3xl font-bold">Logs</h1>
                <p class="text-sm text-base-content/60">Monitor your application activity</p>
            </div>
        </div>
        <div class="flex items-center gap-4">
            <div class="form-control">
                <label class="label cursor-pointer gap-2">
                    <span class="label-text text-sm">Auto-refresh</span>
                    <input type="checkbox" id="auto-refresh" class="toggle toggle-primary toggle-sm" {{ 'checked' if userPreferences.autoRefresh }} />
                </label>
            </div>
        </div>
    </div>

    <!-- Modern Filters Section -->
    <div class="card bg-base-100/80 shadow-xl border border-base-300 backdrop-blur-sm">
        <div class="card-body">
            <div class="flex items-center gap-3 mb-6">
                <div class="w-8 h-8 bg-gradient-to-r from-blue-400 to-cyan-500 rounded-lg flex items-center justify-center text-white">
                    <i class="fas fa-filter text-sm"></i>
                </div>
                <h2 class="text-lg font-semibold">Filters</h2>
            </div>
            <form method="GET" action="{{ currentPath }}" class="space-y-4">
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4">
                    <!-- Level Filter -->
                    <div class="form-control">
                        <label class="label">
                            <span class="label-text font-medium">Level</span>
                        </label>
                        <select name="level" class="select select-bordered select-sm">
                            <option value="all" {% if filters.level == 'all' %}selected{% endif %}>All Levels</option>
                            <option value="debug" {% if filters.level == 'debug' %}selected{% endif %}>Debug</option>
                            <option value="info" {% if filters.level == 'info' %}selected{% endif %}>Info</option>
                            <option value="warn" {% if filters.level == 'warn' %}selected{% endif %}>Warn</option>
                            <option value="error" {% if filters.level == 'error' %}selected{% endif %}>Error</option>
                            <option value="fatal" {% if filters.level == 'fatal' %}selected{% endif %}>Fatal</option>
                        </select>
                    </div>

                    <!-- Namespace Filter -->
                    <div class="form-control">
                        <label class="label">
                            <span class="label-text font-medium">Namespace</span>
                        </label>
                        <select name="namespace" class="select select-bordered select-sm">
                            <option value="all" {% if filters.namespace == 'all' %}selected{% endif %}>All Namespaces</option>
                            {% for ns in namespaces %}
                            <option value="{{ ns }}" {% if filters.namespace == ns %}selected{% endif %}>{{ ns }}</option>
                            {% endfor %}
                        </select>
                    </div>

                    <!-- Start Date -->
                    <div class="form-control">
                        <label class="label">
                            <span class="label-text font-medium">Start Date</span>
                        </label>
                        <input type="datetime-local" name="startDate" value="{{ filters.startDate }}" class="input input-bordered input-sm" />
                    </div>

                    <!-- End Date -->
                    <div class="form-control">
                        <label class="label">
                            <span class="label-text font-medium">End Date</span>
                        </label>
                        <input type="datetime-local" name="endDate" value="{{ filters.endDate }}" class="input input-bordered input-sm" />
                    </div>

                    <!-- Search -->
                    <div class="form-control">
                        <label class="label">
                            <span class="label-text font-medium">Search</span>
                        </label>
                        <div class="flex gap-2">
                            <input type="text" name="search" value="{{ filters.search }}" placeholder="Search logs..." class="input input-bordered input-sm flex-1" />
                            <button type="submit" class="btn btn-primary btn-sm">
                                <i class="fas fa-search"></i>
                            </button>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <!-- Modern Stats -->
    <div class="stats shadow-xl bg-base-100/80 border border-base-300">
        <div class="stat">
            <div class="stat-figure text-primary">
                <i class="fas fa-database text-2xl"></i>
            </div>
            <div class="stat-title">Total Logs</div>
            <div class="stat-value text-primary">{{ pagination.total }}</div>
            <div class="stat-desc">{{ pagination.pages }} pages total</div>
        </div>
        <div class="stat">
            <div class="stat-figure text-secondary">
                <i class="fas fa-file-alt text-2xl"></i>
            </div>
            <div class="stat-title">Current Page</div>
            <div class="stat-value text-secondary">{{ pagination.page }}</div>
            <div class="stat-desc">of {{ pagination.pages }} pages</div>
        </div>
        <div class="stat">
            <div class="stat-figure text-accent">
                <i class="fas fa-eye text-2xl"></i>
            </div>
            <div class="stat-title">Showing</div>
            <div class="stat-value text-accent">{{ logs.length }}</div>
            <div class="stat-desc">results per page</div>
        </div>
    </div>

    <!-- Modern Logs Display -->
    {% if logs.length > 0 %}
    
    <!-- Mobile/Tablet: Card Layout -->
    <div class="lg:hidden space-y-4">
        {% for log in logs %}
        <div class="card bg-base-100 shadow-lg border border-base-300 hover:shadow-xl transition-all duration-300 log-entry">
            <div class="card-body p-4">
                <div class="flex items-start justify-between gap-3 mb-3">
                    <div class="flex items-center gap-2">
                        <span class="badge log-{{ log.level }} badge-sm">{{ log.level | upper }}</span>
                        <span class="badge badge-outline badge-sm">{{ log.namespace }}</span>
                    </div>
                    <div class="text-xs text-base-content/60 font-mono">
                        {{ log.timestamp.toLocaleString() }}
                    </div>
                </div>
                <p class="text-sm mb-3 leading-relaxed">{{ log.message }}</p>
                {% if log.metadata and (log.metadata | length) > 0 %}
                <div class="flex justify-end">
                    <button class="btn btn-primary btn-xs gap-1" onclick="openMetadataModal({{ loop.index0 }})">
                        <i class="fas fa-info-circle"></i>
                        Details
                    </button>
                </div>
                {% endif %}
            </div>
        </div>
        {% endfor %}
    </div>

    <!-- Desktop: Optimized Table Layout -->
    <div class="hidden lg:block">
        <div class="card bg-base-100/80 shadow-xl border border-base-300">
            <div class="card-body p-0">
                <div class="overflow-x-auto">
                    <table class="table table-zebra w-full">
                        <thead class="bg-base-200">
                            <tr>
                                <th class="w-32 font-semibold">Time</th>
                                <th class="w-20 font-semibold">Level</th>
                                <th class="w-32 font-semibold">Service</th>
                                <th class="font-semibold">Message</th>
                                <th class="w-24 font-semibold">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            {% for log in logs %}
                            <tr class="hover:bg-base-200/50 transition-colors log-entry">
                                <td class="font-mono text-xs text-base-content/70 whitespace-nowrap">
                                    <div class="tooltip" data-tip="{{ log.timestamp.toLocaleString() }}">
                                        {{ log.timestamp.toLocaleTimeString() }}
                                    </div>
                                </td>
                                <td>
                                    <span class="badge log-{{ log.level }} badge-sm font-medium">
                                        {{ log.level | upper }}
                                    </span>
                                </td>
                                <td>
                                    <span class="badge badge-outline badge-sm">{{ log.namespace }}</span>
                                </td>
                                <td class="max-w-md">
                                    <div class="line-clamp-2 text-sm leading-relaxed" title="{{ log.message }}">
                                        {{ log.message }}
                                    </div>
                                </td>
                                <td>
                                    {% if log.metadata and (log.metadata | length) > 0 %}
                                    <button class="btn btn-primary btn-xs gap-1 hover-lift" onclick="openMetadataModal({{ loop.index0 }})">
                                        <i class="fas fa-info-circle"></i>
                                        View
                                    </button>
                                    {% else %}
                                    <span class="text-base-content/40 text-xs">No data</span>
                                    {% endif %}
                                </td>
                            </tr>
                            {% endfor %}
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    
    {% else %}
    <!-- Empty State -->
    <div class="card bg-base-100/80 shadow-xl border border-base-300">
        <div class="card-body text-center py-16">
            <div class="w-24 h-24 bg-gradient-to-r from-gray-400 to-gray-600 rounded-full flex items-center justify-center text-white mx-auto mb-6">
                <i class="fas fa-search text-3xl"></i>
            </div>
            <h3 class="text-2xl font-bold mb-3">No logs found</h3>
            <p class="text-base-content/60 mb-6 max-w-md mx-auto">
                Try adjusting your filters or create some log entries using the API. Your logs will appear here once they're available.
            </p>
            <div class="flex gap-3 justify-center">
                <button onclick="window.location.reload()" class="btn btn-primary btn-sm">
                    <i class="fas fa-sync-alt"></i>
                    Refresh
                </button>
                <a href="/dashboard/settings" class="btn btn-ghost btn-sm">
                    <i class="fas fa-cog"></i>
                    Settings
                </a>
            </div>
        </div>
    </div>
    {% endif %}

    <!-- Enhanced Metadata Modal -->
    <div id="metadataModal" class="modal">
        <div class="modal-box w-11/12 max-w-5xl max-h-[85vh] overflow-hidden flex flex-col">
            <div class="flex justify-between items-center mb-6">
                <div class="flex items-center gap-3">
                    <div class="w-8 h-8 bg-gradient-to-r from-blue-400 to-purple-500 rounded-lg flex items-center justify-center text-white">
                        <i class="fas fa-code text-sm"></i>
                    </div>
                    <h3 class="text-xl font-bold">Log Metadata</h3>
                </div>
                <button class="btn btn-sm btn-circle btn-ghost" onclick="closeMetadataModal()">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            
            <!-- Modal content scrollable area -->
            <div class="flex-1 overflow-y-auto space-y-6">
                <!-- Log Details Card -->
                <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
                    <div class="card bg-base-200 shadow-sm">
                        <div class="card-body p-4">
                            <h4 class="font-semibold mb-3 flex items-center gap-2">
                                <i class="fas fa-info-circle text-primary"></i>
                                Log Information
                            </h4>
                            <div class="space-y-3 text-sm">
                                <div class="flex justify-between items-center">
                                    <span class="text-base-content/70">Level:</span>
                                    <span id="modalLogLevel" class="badge badge-sm"></span>
                                </div>
                                <div class="flex justify-between items-center">
                                    <span class="text-base-content/70">Service:</span>
                                    <span id="modalLogNamespace" class="badge badge-outline badge-sm"></span>
                                </div>
                                <div class="flex justify-between items-center">
                                    <span class="text-base-content/70">Timestamp:</span>
                                    <span id="modalLogTimestamp" class="font-mono text-xs"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="card bg-base-200 shadow-sm">
                        <div class="card-body p-4">
                            <h4 class="font-semibold mb-3 flex items-center gap-2">
                                <i class="fas fa-comment-alt text-secondary"></i>
                                Message
                            </h4>
                            <div class="text-sm">
                                <p id="modalLogMessage" class="break-words leading-relaxed"></p>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Metadata Display -->
                <div class="card bg-base-200 shadow-sm">
                    <div class="card-body p-4">
                        <div class="flex justify-between items-center mb-4">
                            <h4 class="font-semibold flex items-center gap-2">
                                <i class="fas fa-database text-accent"></i>
                                Metadata Details
                            </h4>
                            <button class="btn btn-sm btn-secondary gap-2" onclick="copyMetadata()" id="copyMetadataBtn">
                                <i class="fas fa-copy"></i>
                                Copy JSON
                            </button>
                        </div>
                        <div class="bg-base-300 rounded-lg p-4 overflow-x-auto">
                            <pre id="metadataContent" class="text-sm font-mono whitespace-pre-wrap break-all"></pre>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="modal-action mt-6">
                <button class="btn btn-primary" onclick="closeMetadataModal()">Close</button>
            </div>
        </div>
        <div class="modal-backdrop" onclick="closeMetadataModal()"></div>
    </div>

    <!-- Modern Pagination -->
    {% if pagination.pages > 1 %}
    <div class="flex justify-center">
        <div class="join shadow-lg">
            {% if pagination.hasPrev %}
            <a href="?page={{ pagination.page - 1 }}&level={{ filters.level }}&namespace={{ filters.namespace }}&startDate={{ filters.startDate }}&endDate={{ filters.endDate }}&search={{ filters.search }}" 
               class="join-item btn btn-sm">
                <i class="fas fa-chevron-left"></i>
            </a>
            {% endif %}
            
            {% set startPage = [pagination.page - 2, 1] | max %}
            {% set endPage = [pagination.page + 2, pagination.pages] | min %}
            
            {% for page in range(startPage, endPage + 1) %}
            {% if page == pagination.page %}
            <span class="join-item btn btn-sm btn-primary">{{ page }}</span>
            {% else %}
            <a href="?page={{ page }}&level={{ filters.level }}&namespace={{ filters.namespace }}&startDate={{ filters.startDate }}&endDate={{ filters.endDate }}&search={{ filters.search }}" 
               class="join-item btn btn-sm">{{ page }}</a>
            {% endif %}
            {% endfor %}
            
            {% if pagination.hasNext %}
            <a href="?page={{ pagination.page + 1 }}&level={{ filters.level }}&namespace={{ filters.namespace }}&startDate={{ filters.startDate }}&endDate={{ filters.endDate }}&search={{ filters.search }}" 
               class="join-item btn btn-sm">
                <i class="fas fa-chevron-right"></i>
            </a>
            {% endif %}
        </div>
    </div>
    {% endif %}
</div>

<script>
    // Store log data for modal display
    const logsData = {{ logs | dump | safe }};
    
    // Enhanced modal functionality
    function openMetadataModal(logIndex) {
        const log = logsData[logIndex];
        if (!log) return;
        
        // Populate modal with log data
        const levelElement = document.getElementById('modalLogLevel');
        levelElement.textContent = log.level.toUpperCase();
        levelElement.className = `badge badge-sm log-${log.level}`;
        
        document.getElementById('modalLogNamespace').textContent = log.namespace;
        document.getElementById('modalLogTimestamp').textContent = new Date(log.timestamp).toLocaleString();
        document.getElementById('modalLogMessage').textContent = log.message;
        
        // Format and display metadata
        const metadataContent = document.getElementById('metadataContent');
        if (log.metadata && Object.keys(log.metadata).length > 0) {
            metadataContent.textContent = JSON.stringify(log.metadata, null, 2);
        } else {
            metadataContent.textContent = '{}';
        }
        
        // Show modal
        document.getElementById('metadataModal').classList.add('modal-open');
    }
    
    // Close modal
    function closeMetadataModal() {
        document.getElementById('metadataModal').classList.remove('modal-open');
    }
    
    // Copy metadata to clipboard
    async function copyMetadata() {
        const metadataContent = document.getElementById('metadataContent').textContent;
        try {
            await navigator.clipboard.writeText(metadataContent);
            const btn = document.getElementById('copyMetadataBtn');
            const originalHTML = btn.innerHTML;
            btn.innerHTML = '<i class="fas fa-check"></i>Copied!';
            btn.classList.remove('btn-secondary');
            btn.classList.add('btn-success');
            
            setTimeout(() => {
                btn.innerHTML = originalHTML;
                btn.classList.remove('btn-success');
                btn.classList.add('btn-secondary');
            }, 2000);
        } catch (err) {
            console.error('Failed to copy: ', err);
            // Fallback for older browsers
            const textArea = document.createElement('textarea');
            textArea.value = metadataContent;
            document.body.appendChild(textArea);
            textArea.select();
            try {
                document.execCommand('copy');
                alert('Metadata copied to clipboard!');
            } catch (fallbackErr) {
                alert('Failed to copy to clipboard');
            }
            document.body.removeChild(textArea);
        }
    }
    
    // Modal event listeners
    document.addEventListener('DOMContentLoaded', function() {
        const modal = document.getElementById('metadataModal');
        
        // Close modal when clicking backdrop
        modal.addEventListener('click', function(e) {
            if (e.target === modal) {
                closeMetadataModal();
            }
        });
        
        // Close modal with Escape key
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape' && modal.classList.contains('modal-open')) {
                closeMetadataModal();
            }
        });
    });

    // Auto-refresh functionality
    const autoRefreshCheckbox = document.getElementById('auto-refresh');
    if (autoRefreshCheckbox) {
        autoRefreshCheckbox.addEventListener('change', async function() {
            try {
                await fetch('/api/preferences', {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ autoRefresh: this.checked })
                });
            } catch (error) {
                console.log('Could not save auto-refresh preference:', error);
            }
        });
    }
</script>
{% endblock %}